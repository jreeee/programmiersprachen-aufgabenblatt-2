#define CATCH_CONFIG_RUNNER
#include "catch.hpp"
#include "vec2.hpp"

TEST_CASE("testing vec2", "[vec2]")
{
  Vec2 a = {};
  REQUIRE(a.x == Approx(0.0f));
  REQUIRE(a.y == Approx(0.0f));

  Vec2 b = {5.1f,-9.3f};
  REQUIRE(b.x == Approx(5.1f));
  REQUIRE(b.y == Approx(-9.3f));
}
TEST_CASE("testing basic operators", "[vec2]")
{
  Vec2 a = {1.3f,-2.7f};
  Vec2 b = {3.5f,4.2f};
  Vec2 c = {};
  Vec2 d = {-5.7f,3.6f};
  Vec2 e = {-6.1f,-9.7f};
  Vec2 ta{a};
  Vec2 tb{b};
  Vec2 tc{c};
  Vec2 td{d};
  Vec2 te{e};

  //testing the += operator
  Vec2 tmp = ta += b;
  REQUIRE(tmp.x == Approx(4.8f));
  REQUIRE(tmp.y == Approx(1.5f));
  ta = a;
  tmp = ta += c;
  REQUIRE(tmp.x == Approx(1.3f));
  REQUIRE(tmp.y == Approx(-2.7));
  ta = a;
  tmp = ta += d;
  REQUIRE(tmp.x == Approx(-4.4f));
  REQUIRE(tmp.y == Approx(0.9f));
  ta = a;
  tmp = ta += e;
  REQUIRE(tmp.x == Approx(-4.8f));
  REQUIRE(tmp.y == Approx(-12.4f));
  tmp = tb += c;
  REQUIRE(tmp.x == Approx(3.5f));
  REQUIRE(tmp.y == Approx(4.2f));
  tb = b;
  tmp = tb += d;
  REQUIRE(tmp.x == Approx(-2.2f));
  REQUIRE(tmp.y == Approx(7.8f));
  tb = b;
  tmp = tb += e;
  REQUIRE(tmp.x == Approx(-2.6f));
  REQUIRE(tmp.y == Approx(-5.5f));
  tmp = tc += d;
  REQUIRE(tmp.x == Approx(-5.7f));
  REQUIRE(tmp.y == Approx(3.6f));
  tc = c;
  tmp = tc += e;
  REQUIRE(tmp.x == Approx(-6.1f));
  REQUIRE(tmp.y == Approx(-9.7f));
  tmp = td += e;
  REQUIRE(tmp.x == Approx(-11.8f));
  REQUIRE(tmp.y == Approx(-6.1f));
  tb = b;
  tmp = tb += a;
  REQUIRE(tmp.x == Approx(4.8f));
  REQUIRE(tmp.y == Approx(1.5f));
  tc = c;
  tmp = tc += a;
  REQUIRE(tmp.x == Approx(1.3f));
  REQUIRE(tmp.y == Approx(-2.7));
  td = d;
  tmp = td += a;
  REQUIRE(tmp.x == Approx(-4.4f));
  REQUIRE(tmp.y == Approx(0.9f));
  te = e;
  tmp = te += a;
  REQUIRE(tmp.x == Approx(-4.8f));
  REQUIRE(tmp.y == Approx(-12.4f));
  tc = c;
  tmp = tc += b;
  REQUIRE(tmp.x == Approx(3.5f));
  REQUIRE(tmp.y == Approx(4.2f));
  td = d;
  tmp = td += b;
  REQUIRE(tmp.x == Approx(-2.2f));
  REQUIRE(tmp.y == Approx(7.8f));
  te = e;
  tmp = te += b;
  REQUIRE(tmp.x == Approx(-2.6f));
  REQUIRE(tmp.y == Approx(-5.5f));
  td = d;
  tmp = td += c;
  REQUIRE(tmp.x == Approx(-5.7f));
  REQUIRE(tmp.y == Approx(3.6f));
  te = e;
  tmp = te += c;
  REQUIRE(tmp.x == Approx(-6.1f));
  REQUIRE(tmp.y == Approx(-9.7f));
  te = e;
  tmp = te += d;
  REQUIRE(tmp.x == Approx(-11.8f));
  REQUIRE(tmp.y == Approx(-6.1f));

  //testing the + operator
  ta = a;
  tmp = ta + b;
  REQUIRE(tmp.x == Approx(4.8f));
  REQUIRE(tmp.y == Approx(1.5f));
  ta = a;
  tmp = ta + c;
  REQUIRE(tmp.x == Approx(1.3f));
  REQUIRE(tmp.y == Approx(-2.7));
  ta = a;
  tmp = ta + d;
  REQUIRE(tmp.x == Approx(-4.4f));
  REQUIRE(tmp.y == Approx(0.9f));
  ta = a;
  tmp = ta + e;
  REQUIRE(tmp.x == Approx(-4.8f));
  REQUIRE(tmp.y == Approx(-12.4f));
  tb = b;
  tmp = tb + c;
  REQUIRE(tmp.x == Approx(3.5f));
  REQUIRE(tmp.y == Approx(4.2f));
  tb = b;
  tmp = tb + d;
  REQUIRE(tmp.x == Approx(-2.2f));
  REQUIRE(tmp.y == Approx(7.8f));
  tb = b;
  tmp = tb + e;
  REQUIRE(tmp.x == Approx(-2.6f));
  REQUIRE(tmp.y == Approx(-5.5f));
  tc = c;
  tmp = tc + d;
  REQUIRE(tmp.x == Approx(-5.7f));
  REQUIRE(tmp.y == Approx(3.6f));
  tc = c;
  tmp = tc + e;
  REQUIRE(tmp.x == Approx(-6.1f));
  REQUIRE(tmp.y == Approx(-9.7f));
  td = d;
  tmp = td + e;
  REQUIRE(tmp.x == Approx(-11.8f));
  REQUIRE(tmp.y == Approx(-6.1f));
  tb = b;
  tmp = tb + a;
  REQUIRE(tmp.x == Approx(4.8f));
  REQUIRE(tmp.y == Approx(1.5f));
  tc = c;
  tmp = tc + a;
  REQUIRE(tmp.x == Approx(1.3f));
  REQUIRE(tmp.y == Approx(-2.7));
  td = d;
  tmp = td + a;
  REQUIRE(tmp.x == Approx(-4.4f));
  REQUIRE(tmp.y == Approx(0.9f));
  te = e;
  tmp = te + a;
  REQUIRE(tmp.x == Approx(-4.8f));
  REQUIRE(tmp.y == Approx(-12.4f));
  tc = c;
  tmp = tc + b;
  REQUIRE(tmp.x == Approx(3.5f));
  REQUIRE(tmp.y == Approx(4.2f));
  td = d;
  tmp = td + b;
  REQUIRE(tmp.x == Approx(-2.2f));
  REQUIRE(tmp.y == Approx(7.8f));
  te = e;
  tmp = te + b;
  REQUIRE(tmp.x == Approx(-2.6f));
  REQUIRE(tmp.y == Approx(-5.5f));
  td = d;
  tmp = td + c;
  REQUIRE(tmp.x == Approx(-5.7f));
  REQUIRE(tmp.y == Approx(3.6f));
  te = e;
  tmp = te + c;
  REQUIRE(tmp.x == Approx(-6.1f));
  REQUIRE(tmp.y == Approx(-9.7f));
  te = e;
  tmp = te + d;
  REQUIRE(tmp.x == Approx(-11.8f));
  REQUIRE(tmp.y == Approx(-6.1f));

  //testing the -= operator
  ta = a;
  tmp = ta -= b;
  REQUIRE(tmp.x == Approx(-2.2f));
  REQUIRE(tmp.y == Approx(-6.9f));
  ta = a;
  tmp = ta -= c;
  REQUIRE(tmp.x == Approx(1.3f));
  REQUIRE(tmp.y == Approx(-2.7));
  ta = a;
  tmp = ta -= d;
  REQUIRE(tmp.x == Approx(7.0f));
  REQUIRE(tmp.y == Approx(-6.3f));
  ta = a;
  tmp = ta -= e;
  REQUIRE(tmp.x == Approx(7.4f));
  REQUIRE(tmp.y == Approx(7.0f));
  tb = b;
  tmp = tb -= c;
  REQUIRE(tmp.x == Approx(3.5f));
  REQUIRE(tmp.y == Approx(4.2f));
  tb = b;
  tmp = tb -= d;
  REQUIRE(tmp.x == Approx(9.2f));
  REQUIRE(tmp.y == Approx(0.6f));
  tb = b;
  tmp = tb -= e;
  REQUIRE(tmp.x == Approx(9.6f));
  REQUIRE(tmp.y == Approx(13.9f));
  tc = c;
  tmp = tc -= d;
  REQUIRE(tmp.x == Approx(5.7f));
  REQUIRE(tmp.y == Approx(-3.6f));
  tc = c;
  tmp = tc -= e;
  REQUIRE(tmp.x == Approx(6.1f));
  REQUIRE(tmp.y == Approx(9.7f));
  td = d;
  tmp = td -= e;
  REQUIRE(tmp.x == Approx(0.4f));
  REQUIRE(tmp.y == Approx(13.3f));
  tb = b;
  tmp = tb -= a;
  REQUIRE(tmp.x == Approx(2.2f));
  REQUIRE(tmp.y == Approx(6.9f));
  tc = c;
  tmp = tc -= a;
  REQUIRE(tmp.x == Approx(-1.3f));
  REQUIRE(tmp.y == Approx(2.7));
  td = d;
  tmp = td -= a;
  REQUIRE(tmp.x == Approx(-7.0f));
  REQUIRE(tmp.y == Approx(6.3f));
  te = e;
  tmp = te -= a;
  REQUIRE(tmp.x == Approx(-7.4f));
  REQUIRE(tmp.y == Approx(-7.0f));
  tc = c;
  tmp = tc -= b;
  REQUIRE(tmp.x == Approx(-3.5f));
  REQUIRE(tmp.y == Approx(-4.2f));
  td = d;
  tmp = td -= b;
  REQUIRE(tmp.x == Approx(-9.2f));
  REQUIRE(tmp.y == Approx(-0.6f));
  te = e;
  tmp = te -= b;
  REQUIRE(tmp.x == Approx(-9.6f));
  REQUIRE(tmp.y == Approx(-13.9f));
  td = d;
  tmp = td -= c;
  REQUIRE(tmp.x == Approx(-5.7f));
  REQUIRE(tmp.y == Approx(3.6f));
  te = e;
  tmp = te -= c;
  REQUIRE(tmp.x == Approx(-6.1f));
  REQUIRE(tmp.y == Approx(-9.7f));
  te = e;
  tmp = te -= d;
  REQUIRE(tmp.x == Approx(-0.4f));
  REQUIRE(tmp.y == Approx(-13.3f));

  //testing the - operator
  ta = a;
  tmp = ta - b;
  REQUIRE(tmp.x == Approx(-2.2f));
  REQUIRE(tmp.y == Approx(-6.9f));
  ta = a;
  tmp = ta - c;
  REQUIRE(tmp.x == Approx(1.3f));
  REQUIRE(tmp.y == Approx(-2.7));
  ta = a;
  tmp = ta - d;
  REQUIRE(tmp.x == Approx(7.0f));
  REQUIRE(tmp.y == Approx(-6.3f));
  ta = a;
  tmp = ta - e;
  REQUIRE(tmp.x == Approx(7.4f));
  REQUIRE(tmp.y == Approx(7.0f));
  tb = b;
  tmp = tb - c;
  REQUIRE(tmp.x == Approx(3.5f));
  REQUIRE(tmp.y == Approx(4.2f));
  tb = b;
  tmp = tb - d;
  REQUIRE(tmp.x == Approx(9.2f));
  REQUIRE(tmp.y == Approx(0.6f));
  tb = b;
  tmp = tb - e;
  REQUIRE(tmp.x == Approx(9.6f));
  REQUIRE(tmp.y == Approx(13.9f));
  tc = c;
  tmp = tc - d;
  REQUIRE(tmp.x == Approx(5.7f));
  REQUIRE(tmp.y == Approx(-3.6f));
  tc = c;
  tmp = tc - e;
  REQUIRE(tmp.x == Approx(6.1f));
  REQUIRE(tmp.y == Approx(9.7f));
  td = d;
  tmp = td - e;
  REQUIRE(tmp.x == Approx(0.4f));
  REQUIRE(tmp.y == Approx(13.3f));
  tb = b;
  tmp = tb - a;
  REQUIRE(tmp.x == Approx(2.2f));
  REQUIRE(tmp.y == Approx(6.9f));
  tc = c;
  tmp = tc - a;
  REQUIRE(tmp.x == Approx(-1.3f));
  REQUIRE(tmp.y == Approx(2.7));
  td = d;
  tmp = td - a;
  REQUIRE(tmp.x == Approx(-7.0f));
  REQUIRE(tmp.y == Approx(6.3f));
  te = e;
  tmp = te - a;
  REQUIRE(tmp.x == Approx(-7.4f));
  REQUIRE(tmp.y == Approx(-7.0f));
  tc = c;
  tmp = tc - b;
  REQUIRE(tmp.x == Approx(-3.5f));
  REQUIRE(tmp.y == Approx(-4.2f));
  td = d;
  tmp = td - b;
  REQUIRE(tmp.x == Approx(-9.2f));
  REQUIRE(tmp.y == Approx(-0.6f));
  te = e;
  tmp = te - b;
  REQUIRE(tmp.x == Approx(-9.6f));
  REQUIRE(tmp.y == Approx(-13.9f));
  td = d;
  tmp = td -= c;
  REQUIRE(tmp.x == Approx(-5.7f));
  REQUIRE(tmp.y == Approx(3.6f));
  te = e;
  tmp = te - c;
  REQUIRE(tmp.x == Approx(-6.1f));
  REQUIRE(tmp.y == Approx(-9.7f));
  te = e;
  tmp = te - d;
  REQUIRE(tmp.x == Approx(-0.4f));
  REQUIRE(tmp.y == Approx(-13.3f));
}
int main(int argc, char *argv[])
{
  return Catch::Session().run(argc, argv);
}
